{"version":3,"sources":["scripts/app-5ee489d27b.js"],"names":["angular","module","AmChartValueAxeService","AmChartValueAxe","index","id","axisThickness","gridCount","gridThickness","ignoreAxisWidth","labelsEnabled","factory","AmChartSerialService","AmChartFormats","AmChartSerial","type","colors","linesColorPallet","creditsPosition","categoryField","dataDateFormat","angle","addClassNames","fontFamily","fontSize","theme","categoryAxis","boldPeriodBeginning","firstDayOfWeek","parseDates","dashLength","equalSpacing","guides","date","moment","format","lineColor","lineAlpha","lineThickness","chartCursor","enabled","balloonPointerOrientation","cursorPosition","bulletSize","animationDuration","categoryBalloonDateFormat","graphBulletSize","trendLines","allLabels","balloon","legend","useGraphSettings","valueText","titles","$inject","AmChartParserService","$filter","AmChartParser","data","this","results","today","startOf","__dates","__unparsedData","prototype","__createResultDates","self","forEach","category","push","maxDate","Math","max","apply","minDate","min","range","by","__convertDate","__convertAllDates","__formatResultDates","result","__getResultIndexByDate","i","length","isSame","__buildResults","set","value","diff","__convertResultsToArray","Object","keys","map","key","parse","AmChartOptionsFactory","ChartDataMock","AmChartGraph","AmChartOptions","identifier","datas","chart","valueAxes","graphs","dataProvider","AmChartMiniOptionsService","AmChartMiniOptions","gridAlpha","axisAlpha","borderAlpha","borderThickness","fillAlpha","lineThickeness","isArray","AmChartMergeService","Api","AmChartMerge","dataStore","__realData","__realDataCategory","__realDataUnit","unit","__mergeWith","slice","__destructureData","structuredData","sort","left","right","valueOf","dates","d","values","__structureData","destructuredData","merged","__removeBeforeToday","n","get","cb","realData","mergeWith","merge","then","response","v","round","AmChartGraphService","balloonText","bullet","dashLengthField","bulletBorderAlpha","bulletBorderColor","markerType","title","valueAxis","valueField","constant","AmChartDataStore","__toggle","every","splice","toggle","addOnFirst","unshift","User","$q","$log","username","myData","notMyData","loadData","resolve","promises","all","responses","shuffle","error","service","Particles","start","elementId","particlesJS","particles","number","density","enable","value_area","color","shape","stroke","width","polygon","nb_sides","image","src","height","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","particles_nb","remove","retina_detect","DataGenerator","generate","days","item","createItem","createTimeStamp","randomNumber","startDate","clone","subtract","end","floor","ChartData","$rootScope","parseData","name","kind","points","point","Number","load","$emit","loadOn","containerIdentifier","getRandomInt","obj","filter","count","$timeout","$http","__get","endpoint","Promise","info","url","post","urlMerge","ChartController","$scope","vm","chartId","renderChart","AmCharts","isReady","makeChart","ready","loadEvent","$on","evt","mergeEvent","copy","directive","restrict","templateUrl","scope","controller","controllerAs","bindToController","chartMini","ChartMiniController","event","WizardController","$state","progress","progressClass","go","RegisterController","registerData","undefined","userId","next","MainController","getStarted","ImporterController","$stateParams","importerData","removePrefixComment","addPrefixComment","stringfyData","toJson","comment","concat","replace","fromJson","generatedData","aceSettings","showGutter","firstLineNumber","DashboardController","inputSearch","mainChart","chartList","comparableCharts","loadMyChart","loadComparableCharts","comparableChartsItem","addNewChart","setMainChart","createMerge","addChart","initialize","AgreementController","debounce","callback","accept","deny","runBlock","run","routerConfig","$stateProvider","$urlRouterProvider","state","params","otherwise","config","malarkey","$logProvider","toastrConfig","debugEnabled","allowHtml","timeOut","positionClass","preventDuplicates","progressBar","Array","j","temp","$templateCache","put"],"mappings":"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","file":"scripts/app-5ee489d27b.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('dowser', ['ngAnimate', 'ui.router', 'ui.ace', 'ngMaterial', 'toastr', 'ngStorage']);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n  .module('dowser')\n  .factory('AmChartValueAxe', AmChartValueAxeService);\n\n  /** @ngInject */\n  function AmChartValueAxeService() {\n    function AmChartValueAxe(index) {\n      return {\n        \"id\": \"ValueAxis-\" + index,\n        \"axisThickness\": 0,\n        \"gridCount\": 0,\n        \"gridThickness\": 0,\n        \"ignoreAxisWidth\": true,\n        \"labelsEnabled\": false\n      };\n    }\n\n    return AmChartValueAxe;\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('dowser')\n    .factory('AmChartSerial', AmChartSerialService);\n\n  /** @ngInject */\n  function AmChartSerialService(AmChartFormats) {\n    function AmChartSerial() {\n      return {\n        \"type\": \"serial\",\n        \"colors\": AmChartFormats.linesColorPallet,\n        \"creditsPosition\": \"bottom-right\",\n        \"categoryField\": \"date\",\n        \"dataDateFormat\": \"YYYY-MM-DD\",\n        \"angle\": 21,\n        \"addClassNames\": true,\n        \"fontFamily\": \"sans-serif\",\n        \"fontSize\": 13,\n        \"theme\": \"dark\",\n        \"categoryAxis\": {\n          \"boldPeriodBeginning\": false,\n          \"firstDayOfWeek\": 0,\n          \"parseDates\": true,\n          \"axisThickness\": 0,\n          \"gridThickness\": 1,\n          \"dashLength\": AmChartFormats.dashLength,\n          \"equalSpacing\": true,\n          \"guides\": [\n            {\n              \"date\": moment().format('YYYY-MM-DD'),\n              \"lineColor\": \"#CCCCCC\",\n              \"lineAlpha\": 0.3,\n              \"lineThickness\": 2,\n              \"dashLength\": AmChartFormats.dashLength\n            }\n          ]\n        },\n        \"chartCursor\": {\n          \"enabled\": true,\n          \"balloonPointerOrientation\": \"horizontal\",\n          \"cursorPosition\": \"mouse\",\n          \"bulletSize\": 5,\n          \"animationDuration\": 0.3,\n          \"categoryBalloonDateFormat\": \"MMM DD\",\n          \"graphBulletSize\": 0\n        },\n        \"trendLines\": [],\n        \"guides\": [],\n        \"allLabels\": [],\n        \"balloon\": {},\n        \"legend\": {\n          \"enabled\": true,\n          \"useGraphSettings\": true,\n          \"valueText\": \"\"\n        },\n        \"titles\": []\n      };\n    }\n\n    return AmChartSerial;\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('dowser')\n    .factory('AmChartParser', AmChartParserService);\n\n  /** @ngInject */\n  function AmChartParserService($filter, AmChartFormats) {\n    function AmChartParser(data) {\n      this.results = {};\n      this.today = moment().startOf('day');\n      this.__dates = [];\n      this.__unparsedData = data;\n    }\n\n    AmChartParser.prototype.__createResultDates = function() {\n      var self = this;\n      self.__unparsedData.forEach(function(category) {\n        category.data.forEach(function(data) {\n          self.__dates.push(data.date);\n        });\n      });\n      var maxDate = moment(Math.max.apply(null, self.__dates));\n      var minDate = moment(Math.min.apply(null, self.__dates));\n      moment.range(minDate, maxDate).by('hours', function(date) {\n        self.results[date.format('YYYY-MM-DD')] = { date: date };\n      });\n    };\n\n    AmChartParser.prototype.__convertDate = function(date) {\n      return moment(date).startOf('day');\n    };\n\n    AmChartParser.prototype.__convertAllDates = function() {\n      var self = this;\n\n      this.__unparsedData.forEach(function(category) {\n        category.data.forEach(function(data) {\n          data.date = self.__convertDate(data.date);\n        });\n      });\n    };\n\n    AmChartParser.prototype.__formatResultDates = function() {\n      this.results.forEach(function(result) {\n        result.date = result.date.format('YYYY-MM-DD');\n      });\n    };\n\n    AmChartParser.prototype.__getResultIndexByDate = function(date) {\n      for (var i = 0; i < this.results.length; i += 1) {\n        if (this.results[i].date.isSame(date)) {\n          return i;\n        }\n      }\n    };\n\n    AmChartParser.prototype.__buildResults = function() {\n      var self = this;\n\n      self.__unparsedData.forEach(function(set) {\n        set.data.forEach(function(data) {\n          var date = data.date.format('YYYY-MM-DD');\n\n          if (self.results[date][set.category]) {\n            self.results[date][set.category] += data.value;\n          } else {\n            self.results[date][set.category] = data.value;\n          }\n\n          if (data.date.diff(self.today) >= 0) {\n            self.results[date].dashLength = AmChartFormats.dashLength;\n          }\n        });\n      });\n    };\n\n    AmChartParser.prototype.__convertResultsToArray = function() {\n      var self = this;\n      self.results = Object.keys(self.results).map(function(key) {\n        return self.results[key];\n      });\n    };\n\n    AmChartParser.prototype.parse = function() {\n      var self = this;\n\n      self.__createResultDates();\n      self.__convertAllDates();\n      self.__buildResults();\n      self.__convertResultsToArray();\n      self.__formatResultDates();\n\n      return self.results;\n    };\n\n    return AmChartParser;\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('dowser')\n    .factory('AmChartOptions', AmChartOptionsFactory);\n\n  /** @ngInject */\n  function AmChartOptionsFactory(ChartDataMock, AmChartSerial, AmChartValueAxe, AmChartGraph, AmChartParser) {\n    function AmChartOptions(identifier, datas) {\n      var chart = new AmChartSerial();\n\n      chart.valueAxes = [];\n      chart.graphs = [];\n\n      datas.forEach(function(data, index) {\n        chart.valueAxes.push(new AmChartValueAxe(index));\n        chart.graphs.push(new AmChartGraph(data, index));\n      });\n\n      chart.dataProvider = new AmChartParser(datas).parse();\n\n      return chart;\n    }\n\n    return AmChartOptions;\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('dowser')\n    .factory('AmChartMiniOptions', AmChartMiniOptionsService);\n\n  /** @ngInject */\n  function AmChartMiniOptionsService(ChartDataMock, AmChartSerial, AmChartValueAxe, AmChartGraph, AmChartParser, AmChartFormats) {\n    function AmChartMiniOptions(identifier, data) {\n      var chart = new AmChartSerial();\n\n      chart.valueAxes = [];\n      chart.graphs = [];\n\n      chart.valueAxes.push(new AmChartValueAxe(1));\n      chart.graphs.push(new AmChartGraph(data, 1));\n\n      delete chart.legend;\n      delete chart.chartCursor;\n\n      chart.colors = AmChartFormats.linesColorPallet;\n      chart.categoryAxis.labelsEnabled = false;\n      chart.categoryAxis.gridThickness = 0;\n      chart.categoryAxis.dashLength = 0;\n      chart.categoryAxis.gridAlpha = 0;\n      chart.categoryAxis.axisAlpha = 0;\n      chart.balloon = {\n        borderAlpha: 0,\n        borderThickness: 0,\n        fillAlpha: 0,\n        fontSize: 0\n      }\n\n      chart.graphs[0].bulletSize = 9;\n      chart.graphs[0].lineThickeness = 2;\n\n      if (!angular.isArray(data)) {\n        data = [data];\n      }\n\n      chart.dataProvider = new AmChartParser([data[0]]).parse();\n\n      return chart;\n    }\n\n    return AmChartMiniOptions;\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('dowser')\n    .factory('AmChartMerge', AmChartMergeService);\n\n  /** @ngInject */\n  function AmChartMergeService(Api) {\n    function AmChartMerge(dataStore) {\n      this.__realData = dataStore[0];\n      this.__realDataCategory = this.__realData.category;\n      this.__realDataUnit = this.__realData.unit;\n      this.__mergeWith = dataStore.slice(1);\n    }\n\n    AmChartMerge.prototype.__destructureData = function(structuredData) {\n      structuredData.data.sort(function(left, right) {\n        return left.date.valueOf() - right.date.valueOf();\n      });\n      var dates = structuredData.data.map(function(d) {\n        return d.date;\n      });\n      var values = structuredData.data.map(function(d) {\n        return d.value;\n      });\n      return {\n        dates: dates,\n        values: values\n      };\n    };\n\n    AmChartMerge.prototype.__structureData = function(destructuredData) {\n      var data = {\n        dates: this.__realData.dates,\n        values: destructuredData\n      };\n\n      var merged = {\n        category: 'Merged ' + this.__realDataCategory,\n        unit: this.__realDataUnit,\n        data: []\n      };\n\n      for (var i = 0; i < data.dates.length; i += 1) {\n        merged.data[i] = { date: data.dates[i], value: data.values[i] };\n      }\n\n      return merged;\n    };\n\n    AmChartMerge.prototype.__removeBeforeToday = function(d) {\n      var today = moment().startOf('day');\n      var n = { dates: [], values: [] };\n\n      for (var i = 0; i < d.dates.length; i += 1) {\n        if (d.dates[i].diff(today) >= 0) {\n          n.dates.push(d.dates[i]);\n          n.values.push(d.values[i]);\n        }\n      }\n\n      return n;\n    }\n\n    AmChartMerge.prototype.get = function(cb) {\n      var self = this;\n\n      if (self.__mergeWith.length < 1) {\n        return;\n      }\n\n      self.__realData = self.__destructureData(self.__realData);\n      self.__mergeWith = self.__mergeWith.map(function(d) {\n        return self.__destructureData(d);\n      });\n\n      self.__realData = self.__removeBeforeToday(this.__realData);\n      self.__mergeWith = self.__mergeWith.map(function(d) {\n        return self.__removeBeforeToday(d);\n      });\n\n      var realData = self.__realData.values;\n      var mergeWith = self.__mergeWith.map(function(d) {\n        return d.values;\n      });\n\n      Api\n        .merge({ realData: realData, mergeWith: mergeWith || [] })\n        .then(function(response) {\n          var data = response.data.map(function(v) { return Math.round(v) });\n          data = self.__structureData(data);\n          cb(data);\n        });\n\n      return self.dataStore;\n    };\n\n    return AmChartMerge;\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n  .module('dowser')\n  .factory('AmChartGraph', AmChartGraphService);\n\n  /** @ngInject */\n  function AmChartGraphService() {\n    function AmChartGraph(data, index) {\n      return {\n        \"balloonText\": \"[[value]]\" + (data.unit || 'un'),\n        \"bullet\": \"round\",\n        \"dashLengthField\": \"dashLength\",\n        \"id\": \"AmGraph-\" + index,\n        \"lineAlpha\": 1,\n        \"bulletSize\": 10,\n        \"bulletBorderAlpha\": 1,\n        \"bulletBorderColor\": \"#455A64\",\n        \"lineThickness\": 3,\n        \"markerType\": \"square\",\n        \"title\": data.category,\n        \"valueAxis\": \"ValueAxis-\" + index,\n        \"valueField\": data.category\n      };\n    }\n\n    return AmChartGraph;\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('dowser')\n    .constant('AmChartFormats', {\n      date: 'MMM DD',\n      dashLength: 6,\n      linesColorPallet: [\n        '#de4c4f',\n        '#d8854f',\n        '#eea638',\n        '#a7a737',\n        '#86a965',\n        '#8aabb0',\n        '#69c8ff',\n        '#cfd27e',\n        '#9d9888',\n        '#916b8a',\n        '#724887',\n        '#7256bc'\n      ]\n    });\n})();\n\n(function() {\n  'use strict';\n\n  angular\n  .module('dowser')\n  .factory('AmChartDataStore', AmChartDataStore);\n\n  /** @ngInject */\n  function AmChartDataStore() {\n    function AmChartDataStore(data) {\n      if (!data) {\n        data = [];\n      }\n\n      if (!angular.isArray(data)) {\n        data = [data];\n      }\n\n      this.data = data;\n    }\n\n    AmChartDataStore.prototype.get = function() {\n      return this.data;\n    };\n\n    AmChartDataStore.prototype.__toggle = function(data) {\n      var index;\n      this.data.every(function(d, i) {\n        return d.id !== data.id || (function() { index = i; })();\n      });\n\n      if (index) {\n        this.data.splice(index, 1);\n      } else {\n        this.data.push(data);\n      }\n    };\n\n    AmChartDataStore.prototype.toggle = function(data) {\n      if (!angular.isArray(data)) {\n        this.__toggle(data);\n      } else {\n        data.forEach(function(d) { this.__toggle(d); });\n      }\n    };\n\n    AmChartDataStore.prototype.addOnFirst = function(data) {\n      this.data.unshift(data);\n    };\n\n    return AmChartDataStore;\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('dowser')\n    .service('User', User);\n\n  /** @ngInject */\n  function User($q, $log, Api) {\n    var self = this;\n\n    self.id = '007';\n    self.username = 'james';\n    self.myData = [];\n    self.notMyData = [];\n\n    self.loadData = function() {\n      return new $q(function(resolve) {\n        var promises = []\n        promises.push(Api.get('DataType/GetByUser/' + self.username));\n        promises.push(Api.get('DataType/GetByNotUser/' + self.username));\n\n        $q.all(promises)\n          .then(function(responses) {\n            self.myData = responses[0].data;\n            self.notMyData = responses[1].data.shuffle().slice(0, 6);\n\n            resolve();\n          })\n          .catch($log.error);\n      });\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('dowser')\n    .factory('Particles', Particles);\n\n  /** @ngInject */\n  function Particles() {\n\n    return {\n      start: start\n    };\n\n    function start(elementId) {\n      particlesJS(elementId, {\n        \"particles\": {\n          \"number\": {\n            \"value\": 80,\n            \"density\": {\n              \"enable\": true,\n              \"value_area\": 800\n            }\n          },\n          \"color\": {\n            \"value\": \"#ffffff\"\n          },\n          \"shape\": {\n            \"type\": \"circle\",\n            \"stroke\": {\n              \"width\": 0,\n              \"color\": \"#000000\"\n            },\n            \"polygon\": {\n              \"nb_sides\": 5\n            },\n            \"image\": {\n              \"src\": \"img/github.svg\",\n              \"width\": 100,\n              \"height\": 100\n            }\n          },\n          \"opacity\": {\n            \"value\": 0.5,\n            \"random\": false,\n            \"anim\": {\n              \"enable\": false,\n              \"speed\": 1,\n              \"opacity_min\": 0.1,\n              \"sync\": false\n            }\n          },\n          \"size\": {\n            \"value\": 3,\n            \"random\": true,\n            \"anim\": {\n              \"enable\": false,\n              \"speed\": 40,\n              \"size_min\": 0.1,\n              \"sync\": false\n            }\n          },\n          \"line_linked\": {\n            \"enable\": true,\n            \"distance\": 150,\n            \"color\": \"#ffffff\",\n            \"opacity\": 0.4,\n            \"width\": 1\n          },\n          \"move\": {\n            \"enable\": true,\n            \"speed\": 4,\n            \"direction\": \"none\",\n            \"random\": false,\n            \"straight\": false,\n            \"out_mode\": \"out\",\n            \"bounce\": false,\n            \"attract\": {\n              \"enable\": false,\n              \"rotateX\": 600,\n              \"rotateY\": 1200\n            }\n          }\n        },\n        \"interactivity\": {\n          \"detect_on\": \"canvas\",\n          \"events\": {\n            \"onhover\": {\n              \"enable\": true,\n              \"mode\": \"grab\"\n            },\n            \"onclick\": {\n              \"enable\": true,\n              \"mode\": \"push\"\n            },\n            \"resize\": true\n          },\n          \"modes\": {\n            \"grab\": {\n              \"distance\": 140,\n              \"line_linked\": {\n                \"opacity\": 1\n              }\n            },\n            \"bubble\": {\n              \"distance\": 400,\n              \"size\": 40,\n              \"duration\": 2,\n              \"opacity\": 8,\n              \"speed\": 3\n            },\n            \"repulse\": {\n              \"distance\": 200,\n              \"duration\": 0.4\n            },\n            \"push\": {\n              \"particles_nb\": 4\n            },\n            \"remove\": {\n              \"particles_nb\": 2\n            }\n          }\n        },\n        \"retina_detect\": true\n      });\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('dowser')\n    .factory('DataGenerator', DataGenerator);\n\n  /** @ngInject */\n  function DataGenerator() {\n    var days = 30;\n\n    return {\n      generate: generate\n    };\n\n    function generate() {\n      var data = [];\n\n      for (var i = 0; i < days; i++) {\n        var item = createItem(i);\n        data.push(item);\n      }\n\n      return data;\n    }\n\n    function createItem(i) {\n      var item = {};\n      item.date = createTimeStamp(i);\n      item.value = randomNumber(1, 100);\n      return item;\n    }\n\n    function createTimeStamp(i) {\n      var today = moment();\n      var startDate = today.clone().subtract(days - i, 'days');\n      return +moment(startDate);\n    }\n\n    function randomNumber(start, end) {\n      return Math.floor((Math.random() * end) + start);\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('dowser')\n    .factory('ChartData', ChartData);\n\n  /** @ngInject */\n  function ChartData($rootScope, Api) {\n    return {\n      load: load,\n      loadOn: loadOn\n    };\n\n    function parseData(data, identifier) {\n      return {\n        id: identifier,\n        category: data.name,\n        unit: data.kind,\n        data: data.points.map(function(point) {\n          return {\n            date: point.date,\n            value: Math.round(Number(point.value))\n          };\n        })\n      };\n    }\n\n    function load(identifier) {\n      Api.get('DataType/Get/' + identifier)\n        .then(function(response) {\n          var data = parseData(response.data, identifier);\n          $rootScope.$emit('chart:' + identifier + ':load', data);\n        });\n    }\n\n    function loadOn(containerIdentifier, identifier) {\n      Api.get('DataType/Get/' + identifier)\n        .then(function(response) {\n          var data = parseData(response.data, identifier);\n          $rootScope.$emit('chart:' + containerIdentifier + ':load', data);\n        });\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('dowser')\n    .factory('ChartDataMock', ChartDataMock);\n\n  /** @ngInject */\n  function ChartDataMock() {\n    var count = 0;\n\n    return {\n      get: get\n    };\n\n    function getRandomInt(min, max) {\n      return Math.floor(Math.random() * (max - min)) + min;\n    }\n\n    function get(category) {\n      var obj = [\n        {\n          category: 'My Sells',\n          unit: 'k',\n          data: [\n            { date: 1455365898000, value: 124 },\n            { date: 1455452328000, value: 225 },\n            { date: 1455538746000, value: 223 },\n            { date: 1455625156000, value: 125 },\n            { date: 1455711569000, value: 206 },\n            { date: 1455711574000, value: 126 },\n            { date: 1455797998000, value: 228 },\n            { date: 1455884411000, value: 128 },\n            { date: 1455974425000, value: 129 },\n            { date: 1456057242000, value: 130 },\n            { date: 1456143657000, value: 30 },\n            { date: 1456230069000, value: 132 },\n            { date: 1456316481000, value: 133 },\n            { date: 1456402893000, value: 231 },\n            { date: 1456489323000, value: 233 },\n            { date: 1456575735000, value: 122 },\n            { date: 1456667562060, value: 341 }\n          ]\n        },\n        {\n          category: 'Ice Cream Sells',\n          data: [\n            { date: 1455365898000, value: getRandomInt(50, 380) },\n            { date: 1455452328000, value: getRandomInt(50, 380) },\n            { date: 1455538746000, value: getRandomInt(50, 380) },\n            { date: 1455625156000, value: getRandomInt(50, 380) },\n            { date: 1455711574000, value: getRandomInt(50, 380) },\n            { date: 1455797998000, value: getRandomInt(50, 380) },\n            { date: 1455884411000, value: getRandomInt(50, 380) },\n            { date: 1455974425000, value: getRandomInt(50, 380) },\n            { date: 1456057242000, value: getRandomInt(50, 380) },\n            { date: 1456143657000, value: getRandomInt(50, 380) },\n            { date: 1456230069000, value: getRandomInt(50, 380) },\n            { date: 1456316481000, value: getRandomInt(50, 380) },\n            { date: 1456402893000, value: getRandomInt(50, 380) },\n            { date: 1456489323000, value: getRandomInt(50, 380) },\n            { date: 1456575735000, value: getRandomInt(50, 380) },\n            { date: 1456667562060, value: getRandomInt(50, 380) }\n          ]\n        },\n        {\n          category: 'Weather',\n          unit: 'ºC',\n          data: [\n            { date: 1455365898000, value: getRandomInt(14, 33) },\n            { date: 1455452328000, value: getRandomInt(14, 33) },\n            { date: 1455538746000, value: getRandomInt(14, 33) },\n            { date: 1455625156000, value: getRandomInt(14, 33) },\n            { date: 1455711574000, value: getRandomInt(14, 33) },\n            { date: 1455797998000, value: getRandomInt(14, 33) },\n            { date: 1455884411000, value: getRandomInt(14, 33) },\n            { date: 1455974425000, value: getRandomInt(14, 33) },\n            { date: 1456057242000, value: getRandomInt(14, 33) },\n            { date: 1456143657000, value: getRandomInt(14, 33) },\n            { date: 1456230069000, value: getRandomInt(14, 33) },\n            { date: 1456316481000, value: getRandomInt(14, 33) },\n            { date: 1456402893000, value: getRandomInt(14, 33) },\n            { date: 1456489323000, value: getRandomInt(14, 33) },\n            { date: 1456575735000, value: getRandomInt(14, 33) },\n            { date: 1456667562060, value: getRandomInt(14, 33) }\n          ]\n        }\n      ];\n\n      if (!category) {\n        return obj;\n      }\n\n      obj = obj.filter(function(data) {\n        return data.category === category;\n      })[0];\n\n      obj.category = obj.category + ' ' + ++count;\n      return obj;\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('dowser')\n    .factory('Api', Api);\n\n  /** @ngInject */\n  function Api($timeout, $http, $log) {\n\n    var url = 'http://158.85.206.13:8081/';\n    var urlMerge = 'http://158.85.199.5:8002';\n\n    return {\n      __get: __get,\n      get: get,\n      post: post,\n      merge: merge\n    };\n\n    function __get(endpoint) {\n      return new Promise(function(resolve) {\n        $log.info('Getting: ' + url + endpoint);\n        $timeout(resolve, 2000);\n      });\n    }\n\n    function get(endpoint) {\n      return $http.get(url + endpoint);\n    }\n\n    function post(endpoint, data) {\n      return $http.post(url + endpoint, data);\n    }\n\n    function merge(data) {\n      return $http.post(urlMerge, data);\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('dowser')\n    .directive('chart', chart);\n\n  /** @ngInject */\n  function chart() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/chart/chart.html',\n      scope: {\n        identifier: '@'\n      },\n      controller: ChartController,\n      controllerAs: 'vm',\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function ChartController($scope, $rootScope, $timeout, AmChartOptions, AmChartDataStore, AmChartMerge) {\n      var vm = this;\n\n      vm.chartId = 'chart-' + vm.identifier\n      vm.dataStore = new AmChartDataStore();\n\n      vm.renderChart = function() {\n        if (AmCharts.isReady) {\n          var chart = new AmChartOptions(vm.identifier, vm.dataStore.get());\n          return AmCharts.makeChart(vm.chartId, chart);\n        }\n        AmCharts.ready(vm.renderChart);\n      };\n\n      vm.loadEvent = $rootScope.$on('chart:' + vm.identifier + ':load', function(evt, data) {\n        vm.dataStore.toggle(data);\n        $timeout(vm.renderChart);\n      });\n\n      vm.mergeEvent = $rootScope.$on('chart:' + vm.identifier + ':merge', function() {\n        var data = angular.copy(vm.dataStore.get());\n        new AmChartMerge(data).get(function(merged) {\n          vm.dataStore.addOnFirst(merged);\n          $timeout(vm.renderChart);\n        });\n      });\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('dowser')\n    .directive('chartMini', chartMini);\n\n  /** @ngInject */\n  function chartMini() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/chart/chart-mini.html',\n      scope: {\n        identifier: '@'\n      },\n      controller: ChartMiniController,\n      controllerAs: 'vm',\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function ChartMiniController($rootScope, $timeout, AmChartMiniOptions) {\n      var vm = this;\n\n      vm.chartId = 'chart-' + vm.identifier\n\n      vm.renderChart = function(data) {\n        if (AmCharts.isReady) {\n          var chart = new AmChartMiniOptions(vm.identifier, data);\n          return AmCharts.makeChart(vm.chartId, chart);\n        }\n        AmCharts.ready(vm.renderChart);\n      };\n\n      vm.event = $rootScope.$on('chart:' + vm.identifier + ':load', function(evt, data) {\n        $timeout(function() { vm.renderChart(data); });\n      });\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('dowser')\n    .controller('WizardController', WizardController);\n\n  /** @ngInject */\n  function WizardController($rootScope, $state) {\n    var vm = this;\n\n    vm.progress = false;\n    vm.progressClass = 'progress-hide';\n\n    vm.event = $rootScope.$on('wizard:progress', function() {\n      vm.progress = !vm.progress;\n      vm.progressClass = vm.progress ? 'progress-show' : 'progress-hide';\n    });\n\n    $state.go('wizard.register');\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('dowser')\n    .controller('RegisterController', RegisterController);\n\n  /** @ngInject */\n  function RegisterController($rootScope, $timeout, $state, User) {\n    var vm = this;\n\n    vm.data = {\n      name: undefined,\n      kind: undefined,\n      userId: User.username\n    };\n\n    vm.next = function() {\n      $rootScope.$emit('wizard:progress');\n      $timeout(registerData, 500);\n    };\n\n    function registerData() {\n      $rootScope.$emit('wizard:progress');\n      $state.go('wizard.importer', vm.data);\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('dowser')\n    .controller('MainController', MainController);\n\n  /** @ngInject */\n  function MainController($state, $timeout, Particles) {\n    var vm = this;\n\n    Particles.start('particles-js');\n\n    vm.getStarted = function() {\n      $timeout(function () {\n        $state.go('wizard.register');\n      }, 500);\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('dowser')\n    .controller('ImporterController', ImporterController);\n\n  ImporterController.$inject = ['$rootScope', '$timeout', '$state', '$stateParams', 'Api', 'DataGenerator'];\n\n  /** @ngInject */\n  function ImporterController($rootScope, $timeout, $state, $stateParams, Api, DataGenerator) {\n    var vm = this;\n    var comment = '// This is just an Example data\\n';\n    var generatedData = DataGenerator.generate();\n\n    vm.data = {\n      points: addPrefixComment(generatedData)\n    };\n\n    vm.aceSettings = {\n      showGutter: false,\n      theme:'twilight',\n      mode: 'json',\n      firstLineNumber: 5\n    };\n\n    vm.next = function() {\n      $rootScope.$emit('wizard:progress');\n      $timeout(importerData, 500);\n    };\n\n    function importerData() {\n      var data = $stateParams;\n      data.points = removePrefixComment(vm.data.points);\n      $rootScope.$emit('wizard:progress');\n      $state.go('wizard.agreement', { data: data });\n    }\n\n    function addPrefixComment(data) {\n      var stringfyData = angular.toJson(data, 2);\n      return comment.concat(stringfyData);\n    }\n\n    function removePrefixComment(stringfyData) {\n      var data = stringfyData.replace(comment, '');\n      return angular.fromJson(data);\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('dowser')\n    .controller('DashboardController', DashboardController);\n\n  /** @ngInject */\n  function DashboardController($timeout, $state, ChartData, User, $rootScope) {\n    var vm = this;\n\n    vm.inputSearch = '';\n    vm.mainChart = {};\n    vm.chartList = [];\n    vm.comparableCharts = [];\n\n    vm.loadMyChart = function() {\n      ChartData.load(vm.mainChart.id);\n    };\n\n    vm.loadComparableCharts = function() {\n      vm.comparableCharts.forEach(function(comparableChartsItem, index) {\n        $timeout(function() {\n          ChartData.load(comparableChartsItem.id);\n        }, 3000 * index);\n      });\n    };\n\n    vm.addNewChart = function() {\n      $timeout(function () {\n        $state.go('wizard.register');\n      }, 500);\n    };\n\n    vm.setMainChart = function(chart) {\n      vm.mainChart = false;\n      $timeout(function() {\n        vm.mainChart = chart;\n        vm.loadMyChart();\n      }, 500);\n    };\n\n    vm.createMerge = function() {\n      $rootScope.$emit('chart:' + vm.mainChart.id + ':merge');\n    };\n\n    vm.addChart = function(chart) {\n      ChartData.loadOn(vm.mainChart.id, chart.id);\n    };\n\n    vm.initialize = function() {\n      User.loadData().then(function() {\n        vm.chartList = User.myData;\n        vm.comparableCharts = User.notMyData;\n        vm.mainChart = vm.chartList[0];\n        vm.loadMyChart();\n        vm.loadComparableCharts();\n      });\n    };\n\n    vm.initialize();\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('dowser')\n    .controller('AgreementController', AgreementController);\n\n  /** @ngInject */\n  function AgreementController($rootScope, $state, $timeout, $stateParams, $log, Api) {\n    var vm = this;\n\n    vm.accept = debounce(function() {\n      Api.post('DataType/Insert', $stateParams.data)\n        .then(function() {\n          $rootScope.$emit('wizard:progress');\n          $state.go('dashboard');\n        })\n        .catch($log.error);\n    });\n\n    vm.deny = debounce(function() {\n      $rootScope.$emit('wizard:progress');\n      $state.go('main');\n    });\n\n    function debounce(callback) {\n      return function() {\n        $rootScope.$emit('wizard:progress');\n        $timeout(callback, 500);\n      };\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('dowser')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock() {\n\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('dowser')\n    .config(routerConfig);\n\n  /** @ngInject */\n  function routerConfig($stateProvider, $urlRouterProvider) {\n    $stateProvider\n      .state('main', {\n        url: '/',\n        templateUrl: 'app/main/main.html',\n        controller: 'MainController',\n        controllerAs: 'main'\n      })\n      .state('wizard', {\n        url: '/wizard',\n        templateUrl: 'app/wizard/wizard.html',\n        controller: 'WizardController',\n        controllerAs: 'wizard'\n      })\n      .state('wizard.register', {\n        templateUrl: 'app/register/register.html',\n        controller: 'RegisterController',\n        controllerAs: 'register'\n      })\n      .state('wizard.importer', {\n        params: {name: undefined, kind: undefined, userId: 'user'},\n        templateUrl: 'app/importer/importer.html',\n        controller: 'ImporterController',\n        controllerAs: 'importer'\n      })\n      .state('wizard.agreement', {\n        params: {data: {}},\n        templateUrl: 'app/agreement/agreement.html',\n        controller: 'AgreementController',\n        controllerAs: 'agreement'\n      })\n      .state('dashboard', {\n        params: {data: {}},\n        url: '/dashboard',\n        templateUrl: 'app/dashboard/dashboard.html',\n        controller: 'DashboardController',\n        controllerAs: 'dashboard'\n      });\n\n    $urlRouterProvider.otherwise('/');\n  }\n\n})();\n\n/* global malarkey:false, moment:false */\n(function() {\n  'use strict';\n\n  angular\n    .module('dowser')\n    .constant('malarkey', malarkey)\n    .constant('moment', moment);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('dowser')\n    .config(config);\n\n  /** @ngInject */\n  function config($logProvider, toastrConfig) {\n    // Enable log\n    $logProvider.debugEnabled(true);\n\n    // Set options third-party lib\n    toastrConfig.allowHtml = true;\n    toastrConfig.timeOut = 3000;\n    toastrConfig.positionClass = 'toast-top-right';\n    toastrConfig.preventDuplicates = true;\n    toastrConfig.progressBar = true;\n\n    Array.prototype.shuffle = function() {\n      var i = this.length, j, temp;\n      if ( i == 0  ) return this;\n      while ( --i  ) {\n        j = Math.floor( Math.random() * ( i + 1  )  );\n        temp = this[i];\n        this[i] = this[j];\n        this[j] = temp;\n      }\n      return this;\n    };\n  }\n\n})();\n\nangular.module(\"client\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/agreement/agreement.html\",\"<div class=\\\"agreement\\\"><h3 class=\\\"agreement-title md-display-2\\\">Do you accept to share your data?</h3><p class=\\\"agreement-description md-headline\\\">If you accept you will have access for data from other users.</p><md-button ng-click=\\\"agreement.accept()\\\" class=\\\"md-raised md-primary wizard-button\\\">Accept</md-button><md-button ng-click=\\\"agreement.deny()\\\" class=\\\"md-raised md-warn wizard-button\\\">Deny</md-button></div>\");\n$templateCache.put(\"app/dashboard/dashboard.html\",\"<div class=\\\"dashboard full-screen dark-theme\\\"><div class=\\\"sidebar\\\"><h1 class=\\\"logo\\\">Dowser</h1><div class=\\\"charts\\\"><div class=\\\"chart-features\\\"><md-button ng-click=\\\"dashboard.addNewChart()\\\" class=\\\"md-raised md-primary\\\">Add Chart</md-button></div><ul class=\\\"chart-list\\\"><li class=\\\"chart-item\\\" ng-repeat=\\\"chartItem in dashboard.chartList track by $index\\\" ng-click=\\\"dashboard.setMainChart(chartItem)\\\" ng-class=\\\"dashboard.mainChart.id === chartItem.id ? \\'chart-item-active\\' : \\'\\'\\\">{{ chartItem.name }}</li></ul></div></div><div class=\\\"content\\\"><div class=\\\"chart-tools\\\"><h2 class=\\\"md-headline\\\">{{ dashboard.mainChart.name }}</h2><md-button ng-click=\\\"dashboard.createMerge()\\\" class=\\\"md-raised md-accent\\\">Create Merge Line</md-button></div><chart ng-if=\\\"dashboard.mainChart.id\\\" identifier=\\\"{{ dashboard.mainChart.id }}\\\"></chart><h3 class=\\\"md-title\\\">Comparable Charts<div class=\\\"comparable-charts\\\"><div ng-repeat=\\\"comparableChartItem in dashboard.comparableCharts\\\" class=\\\"comparable-chart-item\\\"><h4 class=\\\"md-subhead\\\">{{ comparableChartItem.name }}</h4><chart-mini class=\\\"chart-mini-container\\\" ng-class=\\\"\\\" ng-click=\\\"dashboard.addChart(comparableChartItem)\\\" identifier=\\\"{{ comparableChartItem.id }}\\\"></chart-mini></div></div></h3></div></div>\");\n$templateCache.put(\"app/importer/importer.html\",\"<p class=\\\"instructions\\\">Add initial data to create your chart.</p><div class=\\\"input-ace\\\" ng-model=\\\"importer.data.points\\\" ui-ace=\\\"importer.aceSettings\\\"></div><md-button ng-click=\\\"importer.next()\\\" class=\\\"md-raised md-primary wizard-button\\\">Save</md-button>\");\n$templateCache.put(\"app/main/main.html\",\"<div class=\\\"main full-screen dark-theme\\\"><div id=\\\"particles-js\\\"></div><div class=\\\"header\\\"><h1 class=\\\"logo\\\">Dowser</h1></div><div class=\\\"content content-flex\\\"><div class=\\\"opening\\\"><h2 class=\\\"opening-title md-display-1\\\">Data prediction for Humans</h2><p class=\\\"opening-description md-subhead\\\">Analyze data and predict future outcomes using a simple interface. Compare with real data to understand the trend of your business.</p><md-button class=\\\"opening-button md-primary md-raised\\\" ng-click=\\\"main.getStarted()\\\">Get started</md-button></div></div><div class=\\\"footer\\\">Created with<3 by=\\\"\\\" humans=\\\"\\\" <=\\\"\\\" div=\\\"\\\"></3></div></div>\");\n$templateCache.put(\"app/register/register.html\",\"<p class=\\\"instructions\\\">Complete the form to create the data structure for the creation of your chart.</p><form name=\\\"registerForm\\\"><md-input-container><label>Data name</label> <input required=\\\"\\\" ng-model=\\\"register.data.name\\\" autocomplete=\\\"off\\\" md-placeholder=\\\"Weather\\\"><div class=\\\"input-hint\\\">Ex: Weather</div></md-input-container><md-input-container><label>Unit</label> <input required=\\\"\\\" ng-model=\\\"register.data.kind\\\" autocomplete=\\\"off\\\" md-placeholder=\\\"ºF\\\"><div class=\\\"input-hint\\\">Ex: ºF</div></md-input-container><md-button ng-click=\\\"!registerForm.$valid || register.next()\\\" class=\\\"md-raised md-primary wizard-button\\\">Save</md-button></form>\");\n$templateCache.put(\"app/wizard/wizard.html\",\"<md-progress-linear class=\\\"progress\\\" ng-class=\\\"wizard.progressClass\\\" md-mode=\\\"indeterminate\\\"></md-progress-linear><div class=\\\"wizard full-screen light-theme\\\"><div class=\\\"header\\\"><h1 class=\\\"logo\\\">Dowser</h1></div><div class=\\\"content\\\"><div class=\\\"wizard-view\\\" ui-view=\\\"\\\"></div></div><div class=\\\"footer\\\">Created with<3 by=\\\"\\\" humans=\\\"\\\" <=\\\"\\\" div=\\\"\\\"></3></div></div>\");\n$templateCache.put(\"app/components/chart/chart-mini.html\",\"<div id=\\\"{{ vm.chartId }}\\\" class=\\\"chart-mini\\\"><md-progress-circular class=\\\"md-warn\\\" md-mode=\\\"indeterminate\\\"></md-progress-circular></div>\");\n$templateCache.put(\"app/components/chart/chart.html\",\"<div id=\\\"{{ vm.chartId }}\\\" class=\\\"chart\\\"><md-progress-circular class=\\\"md-warn\\\" md-mode=\\\"indeterminate\\\"></md-progress-circular></div>\");}]);"],"sourceRoot":"/source/"}